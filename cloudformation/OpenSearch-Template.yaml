# Copyright 2021-2024 Chris Farris <chrisf@primeharbor.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: '2010-09-09'
Description: Create an OpenSearch Cluster for Prowler and Security Hub

Parameters:

  pBucketName:
    Description: Name of pre-existing Bucket to store findings and backups
    Type: String

  #
  # OpenSearch Related Params
  #
  pDomainName:
    Description: Name of the Elasticsearch Domain
    Type: String
    MaxLength: 28

  pClusterInstanceType:
    Type: String
    Description: Size of the ES Cluster
    Default: t3.small.search
    ConstraintDescription: Must be a valid Elasticsearch Service InstanceType (https://aws.amazon.com/elasticsearch-service/pricing/). Do not use t2 class.

  pClusterInstanceCount:
    Type: Number
    Description: Cluster Instance Count
    Default: 1

  pVolumeSize:
    Type: Number
    Description: Size of each instance disk in GB
    Default: 30

  pVolumeIOPS:
    Type: Number
    Description: IOPS for instance disk. Must be greater than 3000
    Default: 3000


  pEngineVersion:
    Type: String
    Description: What version of OpenSearch you want to use
    Default: "OpenSearch_2.11"

  # SAML Options
  pSAMLEntityId:
    Description: AWS Identity Center ID for the SAML Application
    Type: String
    Default: "NONE"

  pSAMLMetadataContent:
    Description: AWS Identity Center SAML Metadata Document
    Type: String
    Default: "NONE"

  pMasterBackendRoleId:
    Description: AWS Identity Center Group _ID_ granted admin access to OpenSearch
    Type: String
    Default: "NONE"

  # CustomDomain Options
  pCustomEndpoint:
    Description: FQDN of the Custom Domain Endpoint to use for the Prowler cluster
    Type: String
    Default: "NONE"

  pHostedZoneId:
    Description: Hosted Zone ID for where the ACM Validation will occur
    Type: String
    Default: "NONE"

Conditions:
  cEnableSAML: !And
    - !Not [!Equals [ !Ref pSAMLEntityId, "NONE" ]]
    - !Not [!Equals [ !Ref pSAMLMetadataContent, "NONE" ]]
    - !Not [!Equals [ !Ref pMasterBackendRoleId, "NONE" ]]
  cCustomEndpoint: !And
    - !Not [!Equals [ !Ref pCustomEndpoint, "NONE" ]]
    - !Not [!Equals [ !Ref pHostedZoneId, "NONE" ]]

Resources:

  #
  # OpenSearchService Cluster
  #
  OpenSearchAdminCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub Credentials for OpenSearch cluster from ${AWS::StackName}
      KmsKeyId: !Ref SearchClusterKMSKey
      # Name: String
      GenerateSecretString:
        GenerateStringKey: "MasterUserPassword"
        IncludeSpace: False
        PasswordLength: 32
        RequireEachIncludedType: True
        SecretStringTemplate: '{"MasterUserName": "admin"}'

  ProwlerESDomain:
    Type: AWS::OpenSearchService::Domain
    DependsOn:
      - OpenSearchLogPolicy
    Properties:
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: !Sub '{{resolve:secretsmanager:${OpenSearchAdminCredentials}:SecretString:MasterUserName}}'
          MasterUserPassword: !Sub '{{resolve:secretsmanager:${OpenSearchAdminCredentials}:SecretString:MasterUserPassword}}'
        SAMLOptions:
          Fn::If:
          - cEnableSAML
          - Enabled: True
            Idp:
              EntityId: !Ref pSAMLEntityId
              MetadataContent: !Ref pSAMLMetadataContent
            MasterBackendRole: !Ref pMasterBackendRoleId
            RolesKey: Role
            SessionTimeoutMinutes: 1440
          - Enabled: False
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: "*"
            Action: "es:ESHttp*"
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${pDomainName}/*"
      DomainName: !Ref pDomainName
      EBSOptions:
        EBSEnabled: true
        Iops: !Ref pVolumeIOPS
        VolumeSize: !Ref pVolumeSize
        VolumeType: "gp3"
      ClusterConfig:
        # FIXME
        DedicatedMasterEnabled: false
        InstanceCount: !Ref pClusterInstanceCount
        ZoneAwarenessEnabled: false
        InstanceType: !Ref pClusterInstanceType
      EngineVersion: !Ref pEngineVersion
      # Encryption at rest is not supported with t2.small.elasticsearch
      EncryptionAtRestOptions:
        Enabled: True
        KmsKeyId: !Ref SearchClusterKMSKey
      NodeToNodeEncryptionOptions:
        Enabled: True
      LogPublishingOptions:
        ES_APPLICATION_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt ApplicationLogGroup.Arn
          Enabled: true
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt SearchSlowLogGroup.Arn
          Enabled: true
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt IndexSlowLogGroup.Arn
          Enabled: true
        AUDIT_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt AuditLogGroup.Arn
          Enabled: true
      SnapshotOptions:
        AutomatedSnapshotStartHour: "0"
      DomainEndpointOptions:
        EnforceHTTPS: True
        TLSSecurityPolicy: Policy-Min-TLS-1-2-2019-07
        CustomEndpoint: !If
          - cCustomEndpoint
          - !Ref pCustomEndpoint
          - !Ref AWS::NoValue
        CustomEndpointCertificateArn: !If
          - cCustomEndpoint
          - !Ref ProwlerDomainCert
          - !Ref AWS::NoValue
        CustomEndpointEnabled: !If
          - cCustomEndpoint
          - True
          - False

  ProwlerDomainCert:
    Condition: cCustomEndpoint
    Type: AWS::CertificateManager::Certificate
    Properties:
      CertificateTransparencyLoggingPreference: DISABLED
      DomainName: !Ref pCustomEndpoint
      DomainValidationOptions:
        - DomainName: !Ref pCustomEndpoint
          HostedZoneId: !Ref pHostedZoneId
      ValidationMethod: DNS

  PublicRecordSet:
    Type: AWS::Route53::RecordSet
    Condition: cCustomEndpoint
    Properties:
      HostedZoneId: !Ref pHostedZoneId
      Name: !Ref pCustomEndpoint
      ResourceRecords:
        - !GetAtt ProwlerESDomain.DomainEndpoint
      TTL: 300
      Type: CNAME

  SearchClusterKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub KMS Key in ${AWS::StackName}
      Enabled: True
      EnableKeyRotation: False
      KeyPolicy:
        Version: "2012-10-17"
        Id: "allow-iam"
        Statement:
          - Sid: "Allow everyone use of the key"
            Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource: "*"
          - Sid: "Allow s3 use of the key"
            Effect: "Allow"
            Principal:
              Service:
                - "s3.amazonaws.com"
                - "sqs.amazonaws.com"
                - "lambda.amazonaws.com"
                - "cloudformation.amazonaws.com"
                - !Sub "logs.${AWS::Region}.amazonaws.com"
                # Added per https://aws.amazon.com/premiumsupport/knowledge-center/sns-topic-sqs-queue-sse-cmk-policy/ to support the S3 Event->SNS->SQS workflow
                - "sns.amazonaws.com"
            Action:
              - "kms:GenerateDataKey*"
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:Describe*"
            Resource: "*"

  SearchClusterKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-kmskey"
      TargetKeyId: !Ref SearchClusterKMSKey

  ApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt SearchClusterKMSKey.Arn
      LogGroupName: !Sub ${AWS::StackName}-application-logs
      RetentionInDays: 180

  AuditLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt SearchClusterKMSKey.Arn
      LogGroupName: !Sub ${AWS::StackName}-audit-logs
      RetentionInDays: 180

  SearchSlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt SearchClusterKMSKey.Arn
      LogGroupName: !Sub ${AWS::StackName}-slow-logs
      RetentionInDays: 180

  IndexSlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt SearchClusterKMSKey.Arn
      LogGroupName: !Sub ${AWS::StackName}-index-slow-logs
      RetentionInDays: 180

  OpenSearchLogPolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-LogPolicy"
      PolicyDocument: !Sub >
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "es.amazonaws.com"
              },
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream"
              ],
              "Resource": [
                "${ApplicationLogGroup.Arn}",
                "${SearchSlowLogGroup.Arn}",
                "${IndexSlowLogGroup.Arn}",
                "${AuditLogGroup.Arn}"
              ]
            }
          ]
        }

  ESSnapshotRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: es.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
      - PolicyName: S3Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:ListBucket
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${pBucketName}/*"
              - !Sub "arn:aws:s3:::${pBucketName}"
          - Action:
            - s3:ListAllMyBuckets
            - s3:GetBucketLocation
            Effect: Allow
            Resource: '*'





Outputs:

  DomainName:
    Value: !Ref pDomainName

  DomainEndpointURL:
    Value: !Sub "https://${ProwlerESDomain.DomainEndpoint}"

  SnapshotRoleArn:
    Value: !GetAtt ESSnapshotRole.Arn

  SnapshotBucketName:
    Value: !Ref pBucketName

  ESDomainDomainArn:
    Value: !GetAtt ProwlerESDomain.DomainArn

  ESDomainEndpoint:
    Value: !GetAtt ProwlerESDomain.DomainEndpoint

  AdminLoginCredentials:
    Value: !Ref OpenSearchAdminCredentials



# EOF
